const milesPerYear=1e4,daysInYear=365,leaseYears=3,totalMiles=milesPerYear*leaseYears,milesPerDay=Number(totalMiles/(daysInYear*leaseYears)).toFixed(0),purchaseDate=new Date(2024,2,15),currentDate=new Date,timeLapsed=currentDate.getTime()-purchaseDate.getTime(),daysLapsed=Math.floor(timeLapsed/864e5);let actualMilesUsed=0;const allowedMiles=[],actualMiles=[],days=[];for(let e=0;e<=daysLapsed;e++)allowedMiles.push(milesPerDay*e),actualMiles.push(0),days.push(e);const currentMonth=currentDate.getMonth(),nextMonth=(currentMonth+1)%12,year=currentDate.getFullYear(),startOfMonth=new Date(year,currentMonth,15),endOfMonth=new Date(year,nextMonth,14),monthWhere15thStarts=startOfMonth.toLocaleString("default",{month:"long"}),daysInMonthCycle=Math.ceil((endOfMonth.getTime()-startOfMonth.getTime())/864e5)+1,allowedMilesInMonth=(milesPerDay*daysInMonthCycle).toFixed(0),currentDay=currentDate.getDate();let daysSinceStartOfMonth;if(15<=currentDay)daysSinceStartOfMonth=currentDay-14;else{const b=new Date(currentDate.getFullYear(),currentDate.getMonth(),0).getDate(),c=b-14,d=currentDay;daysSinceStartOfMonth=c+d}function setTextContent(e,t){document.getElementById(e).textContent=t}const potentialCurrentMiles=(milesPerDay*daysSinceStartOfMonth).toFixed(0),ctx1=document.getElementById("mileageChart").getContext("2d"),mileageChart=new Chart(ctx1,{type:"line",data:{labels:days,datasets:[{label:"Allowed Miles",data:allowedMiles,fill:!1,borderColor:"#1E88E5",backgroundColor:"#1E88E5",tension:.1},{label:"Actual Miles Used",data:actualMiles,fill:!1,borderColor:"#FFC107",backgroundColor:"#FFC107",tension:.1}]},options:{scales:{x:{title:{display:!0,text:"Days Since Purchase"}},y:{title:{display:!0,text:"Miles"},ticks:{precision:0}}}}}),initialActualMilesUsed=0,ctx2=document.getElementById("barChart").getContext("2d");let barChart;function initializeBarChart(){var e=7*milesPerDay;let t=0;var a=localStorage.getItem("reportedMiles");a&&(a=JSON.parse(a),t=a.currentValue),barChart=new Chart(ctx2,{type:"bar",data:{labels:["Allowed Miles","Actual Miles Driven"],datasets:[{label:"Miles This Week",data:[e,t],backgroundColor:["rgba(30, 136, 229, 0.5)","rgba(255, 193, 7, 0.5)"],borderColor:["rgba(30, 136, 229, 1)","rgba(255, 193, 7, 1)"],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0,ticks:{precision:0}}}}})}function updateBarChart(){var e=7*milesPerDay;let t=0;var a=localStorage.getItem("reportedMiles");a&&(a=JSON.parse(a),t=a.currentValue),barChart.data.datasets[0].data=[e,t],barChart.update()}initializeBarChart();const ctx3=document.getElementById("pieChart").getContext("2d"),pieChart=new Chart(ctx3,{type:"pie",data:{labels:["Allowed Miles in "+monthWhere15thStarts,"Potential Current Miles for "+monthWhere15thStarts],datasets:[{label:"Miles",data:[allowedMilesInMonth,potentialCurrentMiles],backgroundColor:["rgba(30, 136, 229, 0.5)","rgba(255, 193, 7, 0.5)"],borderColor:["rgba(30, 136, 229, 1)","rgba(255, 193, 7, 1)"],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0,ticks:{precision:0}}}}}),ctx4=document.getElementById("doughnutChart").getContext("2d"),doughnutChart=new Chart(ctx4,{type:"doughnut",data:{labels:["Total Miles Left","Actual Miles Used"],datasets:[{label:"Miles",data:[totalMiles,0],backgroundColor:["rgba(30, 136, 229, 0.5)","rgba(255, 193, 7, 0.5)"],borderColor:["rgba(30, 136, 229, 1)","rgba(255, 193, 7, 1)"],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0,ticks:{precision:0}}}}}),storedActualMilesUsed=localStorage.getItem("actualMilesUsed");function updateCharts(e){pieChart.data.datasets[0].data=[allowedMilesInMonth,potentialCurrentMiles],doughnutChart.data.datasets[0].data[0]=totalMiles-e,doughnutChart.data.datasets[0].data[1]=e,mileageChart.data.datasets[1].data=[{x:daysLapsed,y:e}],mileageChart.update(),updateBarChart(),pieChart.update(),doughnutChart.update(),updateDifference(e)}function setValues(){var e=document.getElementById("actualMilesInput").value,e=parseInt(e);localStorage.setItem("actualMilesUsed",e),updateCharts(e),setTextContent("totalMilesDriven",e.toFixed(0))}function setReportedMilesLocalStorage(e){var t=new Date,a=new Date(t),t=(a.setDate(t.getDate()-t.getDay()),a.setHours(0,0,0,0),new Date(a)),a=(t.setDate(t.getDate()+6),t.setHours(23,59,59,999),{startOfWeekValue:e,currentValue:0,ttl:t.toISOString()});localStorage.setItem("reportedMiles",JSON.stringify(a)),setTextContent("reportedMiles","Not enough data to calculate")}function setReportedMiles(){var e=document.getElementById("actualMilesInput").value,e=parseInt(e),t=localStorage.getItem("reportedMiles");t?(t=e-((e=JSON.parse(t)).startOfWeekValue+e.currentValue)+e.currentValue,e.currentValue=t,localStorage.setItem("reportedMiles",JSON.stringify(e)),setTextContent("reportedMiles",t)):setReportedMilesLocalStorage(null!=(e=localStorage.getItem("actualMilesUsed"))?JSON.parse(e):0)}function setValuesAndUpdateReportedMiles(){setReportedMiles(),setValues(),document.getElementById("actualMilesInput").value=""}function averageAreaReset(){document.getElementById("milesTraveled").value="",setTextContent("milesError",document.getElementById("percentUsed").value="")}null!==storedActualMilesUsed?(updateCharts(actualMilesUsed=parseInt(storedActualMilesUsed)),setTextContent("totalMilesDriven",actualMilesUsed.toFixed(0))):localStorage.setItem("actualMilesUsed",0),window.onload=function(){var e,t=localStorage.getItem("reportedMiles"),a=localStorage.getItem("actualMilesUsed"),a=null!=a?JSON.parse(a):0,l=(t?(t=JSON.parse(t),new Date(t.ttl)<(e=new Date)?((l=new Date(e)).setDate(e.getDate()-e.getDay()),l.setHours(0,0,0,0),(e=new Date(l)).setDate(e.getDate()+6),e.setHours(23,59,59,999),t.startOfWeekValue=a,t.currentValue=0,t.ttl=e.toISOString(),localStorage.setItem("reportedMiles",JSON.stringify(t)),setTextContent("reportedMiles",0)):setTextContent("reportedMiles",t.currentValue)):setReportedMilesLocalStorage(a),localStorage.getItem("currentSession")),t=(l&&(setTextContent("recentMiles",(e=JSON.parse(l)).miles+" miles"),setTextContent("recentBattery",e.percent+"% used"),setTextContent("recentAverageBattery",e.averagePerPercent+" miles per single percent"),setTextContent("recentFullDistance",e.potentialTravel+" total miles")),localStorage.getItem("overalSession"));t&&(setTextContent("allMiles",(a=JSON.parse(t)).miles+" miles"),setTextContent("allBattery",a.percent+"% used"),setTextContent("allAverageBattery",a.averagePerPercent+" miles per single percent"),setTextContent("allFullDistance",a.potentialTravel+" miles"))},document.getElementById("actualMilesInput").addEventListener("keydown",function(e){"Enter"===e.key&&(e.preventDefault(),setValuesAndUpdateReportedMiles())}),document.getElementById("submitBtn").addEventListener("click",function(){setValuesAndUpdateReportedMiles()});let milesTraveled,percentUsed;function setAverageMilesAndBattery(){var e,t,a,l;milesTraveled&&percentUsed?(e=milesTraveled/percentUsed,console.log(typeof milesTraveled),t={miles:milesTraveled,percent:percentUsed,averagePerPercent:e,potentialTravel:100*e},localStorage.setItem("currentSession",JSON.stringify(t)),setTextContent("recentMiles",milesTraveled+" miles"),setTextContent("recentBattery",percentUsed+"% used"),setTextContent("recentAverageBattery",e+" miles per single percent"),setTextContent("recentFullDistance",t.potentialTravel+" miles"),(l=localStorage.getItem("overalSession"))?(l={miles:a=(l=JSON.parse(l)).miles+milesTraveled,percent:l=l.percent+percentUsed,averagePerPercent:a=a/l,potentialTravel:100*a},localStorage.setItem("overalSession",JSON.stringify(l)),setTextContent("allMiles",l.miles+" miles"),setTextContent("allBattery",l.percent+"% used"),setTextContent("allAverageBattery",l.averagePerPercent+" miles per single percent"),setTextContent("allFullDistance",l.potentialTravel+" miles")):(localStorage.setItem("overalSession",JSON.stringify(t)),setTextContent("allMiles",milesTraveled+" miles"),setTextContent("allBattery",percentUsed+"% used"),setTextContent("allAverageBattery",e+" miles per single percent"),setTextContent("allFullDistance",t.potentialTravel+" miles")),averageAreaReset()):setTextContent("milesError","Missing miles value or batter used value")}function updateDifference(e){var t=allowedMiles[daysLapsed]-e,e=(allowedMiles[daysLapsed]-e)/((allowedMiles[daysLapsed]+e)/2)*100,a=document.querySelector(".difference");0<t?(a.textContent=`Under By ${t.toFixed(0)} miles (${e.toFixed(2)}%)`,a.classList.remove("over"),a.classList.add("under")):t<0?(a.textContent=`Over By ${Math.abs(t).toFixed(0)} miles (${e.toFixed(2)}%)`,a.classList.remove("under"),a.classList.add("over")):(a.textContent="Miles used are equal to miles allowed",a.classList.remove("under","over"))}document.getElementById("milesTraveled").addEventListener("keyup",function(e){e.preventDefault(),milesTraveled=Number(e.target.value),"Enter"===e.key&&setAverageMilesAndBattery()}),document.getElementById("percentUsed").addEventListener("keyup",function(e){e.preventDefault(),percentUsed=Number(e.target.value),"Enter"===e.key&&setAverageMilesAndBattery()});const dateOptions={year:"numeric",month:"long",day:"numeric"},daysSincePurchase=Math.floor((currentDate-purchaseDate)/864e5),totalAllowedSoFar=(setTextContent("daysSincePurchase",daysSincePurchase),setTextContent("todayDate",currentDate.toLocaleDateString("en-US",dateOptions)),setTextContent("monthMiles",allowedMilesInMonth),setTextContent("allowedSoFar",potentialCurrentMiles),setTextContent("purchaseDate",purchaseDate.toLocaleDateString("en-US",dateOptions)),Math.floor(milesPerDay*daysSincePurchase));setTextContent("totalAllowedSoFar",totalAllowedSoFar.toFixed(0)),setTextContent("allowedPerDay",milesPerDay);